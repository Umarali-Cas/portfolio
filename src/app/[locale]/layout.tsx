import type { Metadata } from "next";
import { Geist, Geist_Mono, Ubuntu, IBM_Plex_Mono } from "next/font/google";
import '@/styles/global.scss';
import { getMessages } from "next-intl/server";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { Header } from "@/common/components/Header";
import { notFound } from "next/navigation";
import { ReactNode } from "react";
import { routing } from "@/lib/i18n/routing";

interface RootLayoutProps {
  children: ReactNode;
  params: Promise<{ locale: string }>;
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const ubuntu = Ubuntu({
  weight: ["400", "500", "700"],
  subsets: ["latin"],
  variable: "--font-family",
});

const ibmPlexMono = IBM_Plex_Mono({
  weight: ["400", "500", "700"],
  subsets: ["latin"],
  variable: "--second-family",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  icons: {
    icon: "./favicon.svg",
  },
};

export default async function RootLayout({ children, params }: RootLayoutProps) {
  const locale = (await params).locale;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const messages = await getMessages(); // Получаем переводы на сервере

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${ubuntu.variable} ${ibmPlexMono.variable}`}
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
          <Header />
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
